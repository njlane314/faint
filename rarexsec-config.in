#!/usr/bin/env bash
# faint-config â€” print compiler/linker flags and paths for faint

# Resolve topdir: prefer FAINT env; else derive from this script location
if [ -z "$FAINT" ]; then
  topdir="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && cd .. && pwd )"
else
  topdir=${FAINT}
fi

bindir=${topdir}/build/bin
datadir=${topdir}/data
incdir=${topdir}/include
libdir=${topdir}/build/lib
srcdir=${topdir}/src

version=@@VERSION@@
git_rev=@@GIT_REVISION@@
cxx_std=@@CXX_STD@@
use_root=@@USE_ROOT@@

root_cflags=""
root_libs=""
if [ "$use_root" = "yes" ]; then
  root_cflags="$(root-config --cflags) -DUSE_ROOT"
  root_libs="$(root-config --libs)"
fi

cflags="${root_cflags} -std=${cxx_std} -I${incdir}"
libs="-L${libdir} -lfaint ${root_libs}"

usage="Usage: faint-config [--bindir] [--cflags] [--cxx-std] [--datadir] \
[--libs] [--libdir] [--incdir] [--srcdir] [--topdir] [--use-root] \
[--version] [--git-revision] [--help]"

if [ $# -eq 0 ]; then echo "${usage}"; exit 1; fi
for arg in "$@"; do
  case $arg in
    --help) echo "${usage}"; exit 0;;
    --cflags)        out="$out $cflags" ;;
    --cxx-std)       out="$out $cxx_std" ;;
    --bindir)        out="$out $bindir" ;;
    --datadir)       out="$out $datadir" ;;
    --libs)          out="$out $libs" ;;
    --libdir)        out="$out $libdir" ;;
    --incdir)        out="$out $incdir" ;;
    --srcdir)        out="$out $srcdir" ;;
    --topdir)        out="$out $topdir" ;;
    --use-root)      out="$out $use_root" ;;
    --version)       out="$out $version" ;;
    --git-revision)  out="$out $git_rev" ;;
    *) echo "Unknown arg: $arg"; echo "${usage}"; exit 3;;
  esac
done
echo $out
